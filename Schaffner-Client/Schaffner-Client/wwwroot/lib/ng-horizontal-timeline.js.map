{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../node_modules/scssify/lib/browser.js","../src/ng-horizontal-timeline.js","../src/ng-horizontal-timeline.scss","../src/timeline.js"],"names":[],"mappings":"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","file":"ng-horizontal-timeline.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict'\n/*eslint-env browser */\n\nmodule.exports = {\n  /**\n   * Create a <style>...</style> tag and add it to the document head\n   * @param {string} cssText\n   * @param {object?} options\n   * @return {Element}\n   */\n  createStyle: function (cssText, options) {\n    var container = document.head || document.getElementsByTagName('head')[0]\n    var style = document.createElement('style')\n    options = options || {}\n    style.type = 'text/css'\n    if (options.href) {\n      style.setAttribute('data-href', options.href)\n    }\n    if (style.sheet) { // for jsdom and IE9+\n      style.innerHTML = cssText\n      style.sheet.cssText = cssText\n    }\n    else if (style.styleSheet) { // for IE8 and below\n      style.styleSheet.cssText = cssText\n    }\n    else { // for Chrome, Firefox, and Safari\n      style.appendChild(document.createTextNode(cssText))\n    }\n    if (options.prepend) {\n      container.insertBefore(style, container.childNodes[0]);\n    } else {\n      container.appendChild(style);\n    }\n    return style\n  }\n}\n","//@ts-check\r\nimport \"./ng-horizontal-timeline.scss\";\r\nimport angular from \"angular\";\r\nimport $ from \"jquery\";\r\nimport {Timeline} from \"./timeline\";\r\n\r\nconst appModule = angular.module(\"ng-horizontal-timeline\", []);\r\n\r\nfunction controller($element, $log, $timeout, $scope) {\r\n    $log.debug(\"ng-horizontal-timeline component created.\");\r\n    const vm = this;\r\n\r\n    vm.$onInit = () => {\r\n        $log.debug(\"ng-horizontal-timeline component initialized.\");\r\n\r\n        angular.forEach(\r\n            vm.events\r\n            , function (ev) {\r\n                const defaultObj = {\r\n                    selected: false,\r\n                    text: null\r\n                };\r\n\r\n                for (const propDef in defaultObj) {\r\n                    if (angular.isUndefined(ev[propDef])) {\r\n                        ev[propDef] = defaultObj[ev[propDef]];\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    vm.$postLink = () => {\r\n        $log.debug(\"$postLink: \", $($element), vm.events);\r\n\r\n        $timeout(() => {\r\n            // initialize timeline\r\n            vm.timeline = new Timeline($($element).find(\".timeline-container\"));\r\n\r\n            _resetSelected();\r\n\r\n            // adds jQuery's event wrapper\r\n            vm.timeline.onEventClick(_eventClick);\r\n        });\r\n    };\r\n\r\n    $scope.$watch(\r\n        () => vm.selectedIndex\r\n        , function (_, newSelected) {\r\n            if (angular.isUndefined(newSelected)) {\r\n                return;\r\n            }\r\n\r\n            let i = 0;\r\n\r\n            angular.forEach(vm.events, function (ev) {\r\n                ev.selected = newSelected === i;\r\n                i++;\r\n            });\r\n\r\n            $timeout(() => _resetSelectedStyle());\r\n        }\r\n    );\r\n\r\n    $scope.$watchCollection(\r\n        () => vm.events\r\n        , () => $timeout(() => {\r\n            vm.timeline.offEventClick(_eventClick);\r\n            vm.timeline.onEventClick(_eventClick);\r\n        })\r\n    );\r\n\r\n    function _resetSelected() {\r\n        vm.selectedIndex = _getSelected(vm.events).index;\r\n        _resetSelectedStyle();\r\n    }\r\n\r\n    function _resetSelectedStyle() {\r\n        if (angular.isUndefined(vm.selectedIndex)) {\r\n            return;\r\n        }\r\n\r\n        // add the style to the selected index\r\n        vm.timeline.setSelected(vm.selectedIndex);\r\n    }\r\n\r\n    function _getSelected(events) {\r\n        let eventSelected = null\r\n            , i = 0\r\n            , eventIndex = -1;\r\n\r\n        angular.forEach(events, function (ev) {\r\n            if (ev.selected) {\r\n                eventSelected = ev;\r\n                eventIndex = i;\r\n            }\r\n            i++;\r\n        });\r\n\r\n        return {obj: eventSelected, index: eventIndex};\r\n    }\r\n\r\n    function _eventClick(event) {\r\n        $log.debug(\"clicked: \", event);\r\n\r\n        if (vm.eventClick) {\r\n            vm.eventClick(event);\r\n        }\r\n\r\n        _tryApplyScope();\r\n    }\r\n\r\n    function _tryApplyScope() {\r\n        try {\r\n            $scope.$apply();\r\n        } catch (e) {\r\n            $log.debug(e);\r\n        }\r\n    }\r\n\r\n    return vm;\r\n}\r\n\r\ncontroller.$inject = [\r\n    \"$element\"\r\n    , \"$log\"\r\n    , \"$timeout\"\r\n    , \"$scope\"\r\n];\r\n\r\nconst componentConfig = {\r\n    controllerAs: \"vm\"\r\n    , controller: controller\r\n    , bindings: {\r\n        events: \"=*\"\r\n        , eventClick: '&?'\r\n        , selectedIndex: '='\r\n    }\r\n    , template: `<div class=\"timeline-container\">\r\n    <ol class=\"timeline-events\">\r\n        <li class=\"timeline-event\" ng-repeat=\"event in vm.events\">\r\n            <a class=\"timeline-event-link\" href=\"#{{ $index }}\" ng-class=\"{ 'selected': event.selected }\">\r\n                <p ng-bind=\"event.text\"></p>\r\n            </a>\r\n        </li>\r\n    </ol>\r\n    <div class=\"line-container\">\r\n        <span class=\"filling-line\" aria-hidden=\"true\"></span>\r\n    </div>\r\n</div>`\r\n};\r\n\r\nappModule.component(\"hTimeline\", componentConfig);\r\n\r\nmodule.exports = appModule.name;\r\n","var css = \".timeline-container {\\n  position: relative; }\\n  .timeline-container ol {\\n    list-style: none;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    padding: 0;\\n    -webkit-box-pack: justify;\\n        -ms-flex-pack: justify;\\n            justify-content: space-between; }\\n    .timeline-container ol li {\\n      -webkit-box-orient: vertical;\\n      -webkit-box-direction: normal;\\n          -ms-flex-direction: column;\\n              flex-direction: column;\\n      height: 10px; }\\n      .timeline-container ol li a {\\n        text-decoration: none;\\n        cursor: pointer;\\n        display: block; }\\n        .timeline-container ol li a::before {\\n          top: 50%;\\n          -webkit-transform: translateY(-50%);\\n                  transform: translateY(-50%);\\n          display: block;\\n          position: absolute;\\n          content: ' ';\\n          width: 7px;\\n          height: 7px;\\n          background-color: #f8f8f8;\\n          border: 1px solid #383838;\\n          border-radius: 50%; }\\n        .timeline-container ol li a.selected::before {\\n          background-color: #7b9d6f;\\n          border: none;\\n          width: 10px;\\n          height: 10px; }\\n        .timeline-container ol li a p {\\n          position: absolute;\\n          display: block;\\n          padding: 0;\\n          width: 50px;\\n          margin: 14px auto auto 0;\\n          -webkit-transform: translateX(-40%);\\n                  transform: translateX(-40%);\\n          text-align: center;\\n          text-wrap: normal;\\n          overflow-wrap: break-word;\\n          word-wrap: break-word;\\n          -webkit-hyphens: auto;\\n              -ms-hyphens: auto;\\n                  hyphens: auto; }\\n  .timeline-container .line-container {\\n    display: block;\\n    position: absolute;\\n    top: 50%;\\n    width: 100%; }\\n    .timeline-container .line-container .filling-line {\\n      display: block;\\n      position: relative;\\n      z-index: -1;\\n      height: 1px;\\n      background-color: #7b9d6f;\\n      top: 50%;\\n      -webkit-transform: translateY(-50%);\\n              transform: translateY(-50%);\\n      -webkit-transform: scaleX(0);\\n              transform: scaleX(0);\\n      -webkit-transform-origin: left center;\\n              transform-origin: left center;\\n      -webkit-transition: -webkit-transform 0.3s;\\n      transition: -webkit-transform 0.3s;\\n      transition: transform 0.3s;\\n      transition: transform 0.3s, -webkit-transform 0.3s; }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9uZy1ob3Jpem9udGFsLXRpbWVsaW5lLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0E7RUFDRSxtQkFBa0IsRUF1RW5CO0VBeEVEO0lBSUksaUJBQWdCO0lBQ2hCLHFCQUFhO0lBQWIscUJBQWE7SUFBYixjQUFhO0lBQ2IsV0FBVTtJQUNWLDBCQUE4QjtRQUE5Qix1QkFBOEI7WUFBOUIsK0JBQThCLEVBNkMvQjtJQXBESDtNQVVNLDZCQUFzQjtNQUF0Qiw4QkFBc0I7VUFBdEIsMkJBQXNCO2NBQXRCLHVCQUFzQjtNQUN0QixhQUE2QixFQXdDOUI7TUFuREw7UUFjUSxzQkFBcUI7UUFDckIsZ0JBQWU7UUFDZixlQUFjLEVBa0NmO1FBbERQO1VBSkUsU0FBUTtVQUNSLG9DQUEyQjtrQkFBM0IsNEJBQTJCO1VBdUJuQixlQUFjO1VBQ2QsbUJBQWtCO1VBQ2xCLGFBQVk7VUFDWixXQS9CVTtVQWdDVixZQWhDVTtVQWlDViwwQkFuQ2dCO1VBb0NoQiwwQkFuQ2tCO1VBb0NsQixtQkFBa0IsRUFDbkI7UUE1QlQ7VUErQlUsMEJBMUNVO1VBMkNWLGFBQVk7VUFDWixZQXhDZ0M7VUF5Q2hDLGFBekNnQyxFQTBDakM7UUFuQ1Q7VUFzQ1UsbUJBQWtCO1VBQ2xCLGVBQWM7VUFDZCxXQUFVO1VBQ1YsWUFBVztVQUNYLHlCQUF1RDtVQUN2RCxvQ0FBMkI7a0JBQTNCLDRCQUEyQjtVQUMzQixtQkFBa0I7VUFDbEIsa0JBQWlCO1VBQ2pCLDBCQUF5QjtVQUN6QixzQkFBcUI7VUFDckIsc0JBQWE7Y0FBYixrQkFBYTtrQkFBYixjQUFhLEVBQ2Q7RUFqRFQ7SUF1REksZUFBYztJQUNkLG1CQUFrQjtJQUNsQixTQUFRO0lBQ1IsWUFBVyxFQWFaO0lBdkVIO01BNkRNLGVBQWM7TUFDZCxtQkFBa0I7TUFDbEIsWUFBVztNQUNYLFlBQVc7TUFDWCwwQkE1RWM7TUFPbEIsU0FBUTtNQUNSLG9DQUEyQjtjQUEzQiw0QkFBMkI7TUFzRXZCLDZCQUFvQjtjQUFwQixxQkFBb0I7TUFDcEIsc0NBQTZCO2NBQTdCLDhCQUE2QjtNQUM3QiwyQ0FBMEI7TUFBMUIsbUNBQTBCO01BQTFCLDJCQUEwQjtNQUExQixtREFBMEIsRUFDM0IiLCJmaWxlIjoibmctaG9yaXpvbnRhbC10aW1lbGluZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJGJhc2UtY29sb3I6ICM3YjlkNmY7XHJcbiRiYXNlLWNsZWFyLWNvbG9yOiAjZjhmOGY4O1xyXG4kYmFzZS1pbmF0aXZlLWNvbG9yOiAjMzgzODM4O1xyXG4kZXZlbnQtZG90LXNpemU6IDdweDtcclxuJGV2ZW50LWRvdC1zaXplLWJpZzogJGV2ZW50LWRvdC1zaXplICsgM3B4O1xyXG5cclxuQG1peGluIHRvcC1hbmQtdHJhbnNsYXRlKCkge1xyXG4gIHRvcDogNTAlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxufVxyXG5cclxuLnRpbWVsaW5lLWNvbnRhaW5lciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICBvbCB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblxyXG4gICAgbGkge1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICBoZWlnaHQ6ICRldmVudC1kb3Qtc2l6ZSArIDNweDtcclxuXHJcbiAgICAgIGEge1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcblxyXG4gICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICBAaW5jbHVkZSB0b3AtYW5kLXRyYW5zbGF0ZSgpO1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICBjb250ZW50OiAnICc7XHJcbiAgICAgICAgICB3aWR0aDogJGV2ZW50LWRvdC1zaXplO1xyXG4gICAgICAgICAgaGVpZ2h0OiAkZXZlbnQtZG90LXNpemU7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFzZS1jbGVhci1jb2xvcjtcclxuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRiYXNlLWluYXRpdmUtY29sb3I7XHJcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLnNlbGVjdGVkOjpiZWZvcmUge1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJhc2UtY29sb3I7XHJcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICB3aWR0aDogJGV2ZW50LWRvdC1zaXplLWJpZztcclxuICAgICAgICAgIGhlaWdodDogJGV2ZW50LWRvdC1zaXplLWJpZztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHAge1xyXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgICAgd2lkdGg6IDUwcHg7XHJcbiAgICAgICAgICBtYXJnaW46ICgkZXZlbnQtZG90LXNpemUgKyAkZXZlbnQtZG90LXNpemUpIGF1dG8gYXV0byAwO1xyXG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00MCUpO1xyXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgdGV4dC13cmFwOiBub3JtYWw7XHJcbiAgICAgICAgICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xyXG4gICAgICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG4gICAgICAgICAgaHlwaGVuczogYXV0bztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5saW5lLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgLmZpbGxpbmctbGluZSB7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJhc2UtY29sb3I7XHJcbiAgICAgIEBpbmNsdWRlIHRvcC1hbmQtdHJhbnNsYXRlKCk7XHJcbiAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xyXG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGNlbnRlcjtcclxuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\\n/*# sourceURL=src\\\\ng-horizontal-timeline.scss */\\n\"\nmodule.exports = require('scssify').createStyle(css, {\"href\":\"src\\\\ng-horizontal-timeline.scss\"})","//@ts-check\r\n\r\nimport $ from \"jquery\"\r\n\r\nexport class Timeline {\r\n    timelineContainerElement;\r\n    timelineEventsContainer;\r\n\r\n    static toInt(value) {\r\n        return parseInt(value);\r\n    }\r\n\r\n    constructor(timelineContainerElement) {\r\n        if (!timelineContainerElement) {\r\n            throw TypeError(\"timelineContainerElement should not be null\");\r\n        }\r\n\r\n        this.timelineContainerElement = $(timelineContainerElement);\r\n        if (!this.timelineContainerElement.get(0)) {\r\n            throw TypeError(\"timelineContainerElement should not be empty\");\r\n        }\r\n\r\n        //cache timeline components \r\n        this.timelineEventsContainer = this.timelineContainerElement.children('.timeline-events');\r\n        this.lineContainer = this.timelineContainerElement.children('.line-container');\r\n        this.fillingLine = this.lineContainer.children('.filling-line');\r\n    }\r\n\r\n    getEventLinks() {\r\n        return this.timelineEventsContainer.find('.timeline-event-link');\r\n    }\r\n\r\n    onEventClick(callback) {\r\n        this.getEventLinks().on('click', callback);\r\n    }\r\n\r\n    offEventClick(callback) {\r\n        this.getEventLinks().off('click', callback);\r\n    }\r\n\r\n    setSelected(index) {\r\n        const timelineEventLinks = this.getEventLinks();\r\n        const elemSelect = $(timelineEventLinks.get(index));\r\n        const eventsLenght = timelineEventLinks.length - 1;\r\n        const scalePercentage = index / eventsLenght;\r\n\r\n        timelineEventLinks.removeClass(\"selected\");\r\n        elemSelect.addClass(\"selected\");\r\n\r\n        this.fillingLine.css('transform', `scaleX(${scalePercentage})`);\r\n    }\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIuLi9ub2RlX21vZHVsZXMvc2Nzc2lmeS9saWIvYnJvd3Nlci5qcyIsIm5nLWhvcml6b250YWwtdGltZWxpbmUuanMiLCJuZy1ob3Jpem9udGFsLXRpbWVsaW5lLnNjc3MiLCJ0aW1lbGluZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ25DQTs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFKQTtBQU1BLElBQU0sWUFBWSxrQkFBUSxNQUFSLENBQWUsd0JBQWYsRUFBeUMsRUFBekMsQ0FBbEI7O0FBRUEsU0FBUyxVQUFULENBQW9CLFFBQXBCLEVBQThCLElBQTlCLEVBQW9DLFFBQXBDLEVBQThDLE1BQTlDLEVBQXNEO0FBQ2xELFNBQUssS0FBTCxDQUFXLDJDQUFYO0FBQ0EsUUFBTSxLQUFLLElBQVg7O0FBRUEsT0FBRyxPQUFILEdBQWEsWUFBTTtBQUNmLGFBQUssS0FBTCxDQUFXLCtDQUFYOztBQUVBLDBCQUFRLE9BQVIsQ0FDSSxHQUFHLE1BRFAsRUFFTSxVQUFVLEVBQVYsRUFBYztBQUNaLGdCQUFNLGFBQWE7QUFDZiwwQkFBVSxLQURLO0FBRWYsc0JBQU07QUFGUyxhQUFuQjs7QUFLQSxpQkFBSyxJQUFNLE9BQVgsSUFBc0IsVUFBdEIsRUFBa0M7QUFDOUIsb0JBQUksa0JBQVEsV0FBUixDQUFvQixHQUFHLE9BQUgsQ0FBcEIsQ0FBSixFQUFzQztBQUNsQyx1QkFBRyxPQUFILElBQWMsV0FBVyxHQUFHLE9BQUgsQ0FB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QkFBTSxlQUFlLG1CQUFtQixNQUFuQixHQUE0QixDQUFqRDtBQUNBLGdCQUFNLGtCQUFrQixRQUFRLFlBQWhDOztBQUVBLCtCQUFtQixXQUFuQixDQUErQixVQUEvQjtBQUNBLHVCQUFXLFFBQVgsQ0FBb0IsVUFBcEI7O0FBRUEsaUJBQUssV0FBTCxDQUFpQixHQUFqQixDQUFxQixXQUFyQixjQUE0QyxlQUE1QztBQUNIIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIid1c2Ugc3RyaWN0J1xuLyplc2xpbnQtZW52IGJyb3dzZXIgKi9cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIC8qKlxuICAgKiBDcmVhdGUgYSA8c3R5bGU+Li4uPC9zdHlsZT4gdGFnIGFuZCBhZGQgaXQgdG8gdGhlIGRvY3VtZW50IGhlYWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNzc1RleHRcbiAgICogQHBhcmFtIHtvYmplY3Q/fSBvcHRpb25zXG4gICAqIEByZXR1cm4ge0VsZW1lbnR9XG4gICAqL1xuICBjcmVhdGVTdHlsZTogZnVuY3Rpb24gKGNzc1RleHQsIG9wdGlvbnMpIHtcbiAgICB2YXIgY29udGFpbmVyID0gZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdXG4gICAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKVxuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG4gICAgc3R5bGUudHlwZSA9ICd0ZXh0L2NzcydcbiAgICBpZiAob3B0aW9ucy5ocmVmKSB7XG4gICAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoJ2RhdGEtaHJlZicsIG9wdGlvbnMuaHJlZilcbiAgICB9XG4gICAgaWYgKHN0eWxlLnNoZWV0KSB7IC8vIGZvciBqc2RvbSBhbmQgSUU5K1xuICAgICAgc3R5bGUuaW5uZXJIVE1MID0gY3NzVGV4dFxuICAgICAgc3R5bGUuc2hlZXQuY3NzVGV4dCA9IGNzc1RleHRcbiAgICB9XG4gICAgZWxzZSBpZiAoc3R5bGUuc3R5bGVTaGVldCkgeyAvLyBmb3IgSUU4IGFuZCBiZWxvd1xuICAgICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzVGV4dFxuICAgIH1cbiAgICBlbHNlIHsgLy8gZm9yIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaVxuICAgICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzVGV4dCkpXG4gICAgfVxuICAgIGlmIChvcHRpb25zLnByZXBlbmQpIHtcbiAgICAgIGNvbnRhaW5lci5pbnNlcnRCZWZvcmUoc3R5bGUsIGNvbnRhaW5lci5jaGlsZE5vZGVzWzBdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0eWxlXG4gIH1cbn1cbiIsIi8vQHRzLWNoZWNrXHJcbmltcG9ydCBcIi4vbmctaG9yaXpvbnRhbC10aW1lbGluZS5zY3NzXCI7XHJcbmltcG9ydCBhbmd1bGFyIGZyb20gXCJhbmd1bGFyXCI7XHJcbmltcG9ydCAkIGZyb20gXCJqcXVlcnlcIjtcclxuaW1wb3J0IHtUaW1lbGluZX0gZnJvbSBcIi4vdGltZWxpbmVcIjtcclxuXHJcbmNvbnN0IGFwcE1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKFwibmctaG9yaXpvbnRhbC10aW1lbGluZVwiLCBbXSk7XHJcblxyXG5mdW5jdGlvbiBjb250cm9sbGVyKCRlbGVtZW50LCAkbG9nLCAkdGltZW91dCwgJHNjb3BlKSB7XHJcbiAgICAkbG9nLmRlYnVnKFwibmctaG9yaXpvbnRhbC10aW1lbGluZSBjb21wb25lbnQgY3JlYXRlZC5cIik7XHJcbiAgICBjb25zdCB2bSA9IHRoaXM7XHJcblxyXG4gICAgdm0uJG9uSW5pdCA9ICgpID0+IHtcclxuICAgICAgICAkbG9nLmRlYnVnKFwibmctaG9yaXpvbnRhbC10aW1lbGluZSBjb21wb25lbnQgaW5pdGlhbGl6ZWQuXCIpO1xyXG5cclxuICAgICAgICBhbmd1bGFyLmZvckVhY2goXHJcbiAgICAgICAgICAgIHZtLmV2ZW50c1xyXG4gICAgICAgICAgICAsIGZ1bmN0aW9uIChldikge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZGVmYXVsdE9iaiA9IHtcclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogbnVsbFxyXG4gICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHByb3BEZWYgaW4gZGVmYXVsdE9iaikge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChhbmd1bGFyLmlzVW5kZWZpbmVkKGV2W3Byb3BEZWZdKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBldltwcm9wRGVmXSA9IGRlZmF1bHRPYmpbZXZbcHJvcERlZl1dO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZtLiRwb3N0TGluayA9ICgpID0+IHtcclxuICAgICAgICAkbG9nLmRlYnVnKFwiJHBvc3RMaW5rOiBcIiwgJCgkZWxlbWVudCksIHZtLmV2ZW50cyk7XHJcblxyXG4gICAgICAgICR0aW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgLy8gaW5pdGlhbGl6ZSB0aW1lbGluZVxyXG4gICAgICAgICAgICB2bS50aW1lbGluZSA9IG5ldyBUaW1lbGluZSgkKCRlbGVtZW50KS5maW5kKFwiLnRpbWVsaW5lLWNvbnRhaW5lclwiKSk7XHJcblxyXG4gICAgICAgICAgICBfcmVzZXRTZWxlY3RlZCgpO1xyXG5cclxuICAgICAgICAgICAgLy8gYWRkcyBqUXVlcnkncyBldmVudCB3cmFwcGVyXHJcbiAgICAgICAgICAgIHZtLnRpbWVsaW5lLm9uRXZlbnRDbGljayhfZXZlbnRDbGljayk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgICRzY29wZS4kd2F0Y2goXHJcbiAgICAgICAgKCkgPT4gdm0uc2VsZWN0ZWRJbmRleFxyXG4gICAgICAgICwgZnVuY3Rpb24gKF8sIG5ld1NlbGVjdGVkKSB7XHJcbiAgICAgICAgICAgIGlmIChhbmd1bGFyLmlzVW5kZWZpbmVkKG5ld1NlbGVjdGVkKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBsZXQgaSA9IDA7XHJcblxyXG4gICAgICAgICAgICBhbmd1bGFyLmZvckVhY2godm0uZXZlbnRzLCBmdW5jdGlvbiAoZXYpIHtcclxuICAgICAgICAgICAgICAgIGV2LnNlbGVjdGVkID0gbmV3U2VsZWN0ZWQgPT09IGk7XHJcbiAgICAgICAgICAgICAgICBpKys7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgJHRpbWVvdXQoKCkgPT4gX3Jlc2V0U2VsZWN0ZWRTdHlsZSgpKTtcclxuICAgICAgICB9XHJcbiAgICApO1xyXG5cclxuICAgICRzY29wZS4kd2F0Y2hDb2xsZWN0aW9uKFxyXG4gICAgICAgICgpID0+IHZtLmV2ZW50c1xyXG4gICAgICAgICwgKCkgPT4gJHRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB2bS50aW1lbGluZS5vZmZFdmVudENsaWNrKF9ldmVudENsaWNrKTtcclxuICAgICAgICAgICAgdm0udGltZWxpbmUub25FdmVudENsaWNrKF9ldmVudENsaWNrKTtcclxuICAgICAgICB9KVxyXG4gICAgKTtcclxuXHJcbiAgICBmdW5jdGlvbiBfcmVzZXRTZWxlY3RlZCgpIHtcclxuICAgICAgICB2bS5zZWxlY3RlZEluZGV4ID0gX2dldFNlbGVjdGVkKHZtLmV2ZW50cykuaW5kZXg7XHJcbiAgICAgICAgX3Jlc2V0U2VsZWN0ZWRTdHlsZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIF9yZXNldFNlbGVjdGVkU3R5bGUoKSB7XHJcbiAgICAgICAgaWYgKGFuZ3VsYXIuaXNVbmRlZmluZWQodm0uc2VsZWN0ZWRJbmRleCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gYWRkIHRoZSBzdHlsZSB0byB0aGUgc2VsZWN0ZWQgaW5kZXhcclxuICAgICAgICB2bS50aW1lbGluZS5zZXRTZWxlY3RlZCh2bS5zZWxlY3RlZEluZGV4KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBfZ2V0U2VsZWN0ZWQoZXZlbnRzKSB7XHJcbiAgICAgICAgbGV0IGV2ZW50U2VsZWN0ZWQgPSBudWxsXHJcbiAgICAgICAgICAgICwgaSA9IDBcclxuICAgICAgICAgICAgLCBldmVudEluZGV4ID0gLTE7XHJcblxyXG4gICAgICAgIGFuZ3VsYXIuZm9yRWFjaChldmVudHMsIGZ1bmN0aW9uIChldikge1xyXG4gICAgICAgICAgICBpZiAoZXYuc2VsZWN0ZWQpIHtcclxuICAgICAgICAgICAgICAgIGV2ZW50U2VsZWN0ZWQgPSBldjtcclxuICAgICAgICAgICAgICAgIGV2ZW50SW5kZXggPSBpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGkrKztcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHtvYmo6IGV2ZW50U2VsZWN0ZWQsIGluZGV4OiBldmVudEluZGV4fTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBfZXZlbnRDbGljayhldmVudCkge1xyXG4gICAgICAgICRsb2cuZGVidWcoXCJjbGlja2VkOiBcIiwgZXZlbnQpO1xyXG5cclxuICAgICAgICBpZiAodm0uZXZlbnRDbGljaykge1xyXG4gICAgICAgICAgICB2bS5ldmVudENsaWNrKGV2ZW50KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIF90cnlBcHBseVNjb3BlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gX3RyeUFwcGx5U2NvcGUoKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgJHNjb3BlLiRhcHBseSgpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgJGxvZy5kZWJ1ZyhlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHZtO1xyXG59XHJcblxyXG5jb250cm9sbGVyLiRpbmplY3QgPSBbXHJcbiAgICBcIiRlbGVtZW50XCJcclxuICAgICwgXCIkbG9nXCJcclxuICAgICwgXCIkdGltZW91dFwiXHJcbiAgICAsIFwiJHNjb3BlXCJcclxuXTtcclxuXHJcbmNvbnN0IGNvbXBvbmVudENvbmZpZyA9IHtcclxuICAgIGNvbnRyb2xsZXJBczogXCJ2bVwiXHJcbiAgICAsIGNvbnRyb2xsZXI6IGNvbnRyb2xsZXJcclxuICAgICwgYmluZGluZ3M6IHtcclxuICAgICAgICBldmVudHM6IFwiPSpcIlxyXG4gICAgICAgICwgZXZlbnRDbGljazogJyY/J1xyXG4gICAgICAgICwgc2VsZWN0ZWRJbmRleDogJz0nXHJcbiAgICB9XHJcbiAgICAsIHRlbXBsYXRlOiBgPGRpdiBjbGFzcz1cInRpbWVsaW5lLWNvbnRhaW5lclwiPlxyXG4gICAgPG9sIGNsYXNzPVwidGltZWxpbmUtZXZlbnRzXCI+XHJcbiAgICAgICAgPGxpIGNsYXNzPVwidGltZWxpbmUtZXZlbnRcIiBuZy1yZXBlYXQ9XCJldmVudCBpbiB2bS5ldmVudHNcIj5cclxuICAgICAgICAgICAgPGEgY2xhc3M9XCJ0aW1lbGluZS1ldmVudC1saW5rXCIgaHJlZj1cIiN7eyAkaW5kZXggfX1cIiBuZy1jbGFzcz1cInsgJ3NlbGVjdGVkJzogZXZlbnQuc2VsZWN0ZWQgfVwiPlxyXG4gICAgICAgICAgICAgICAgPHAgbmctYmluZD1cImV2ZW50LnRleHRcIj48L3A+XHJcbiAgICAgICAgICAgIDwvYT5cclxuICAgICAgICA8L2xpPlxyXG4gICAgPC9vbD5cclxuICAgIDxkaXYgY2xhc3M9XCJsaW5lLWNvbnRhaW5lclwiPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzPVwiZmlsbGluZy1saW5lXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9zcGFuPlxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PmBcclxufTtcclxuXHJcbmFwcE1vZHVsZS5jb21wb25lbnQoXCJoVGltZWxpbmVcIiwgY29tcG9uZW50Q29uZmlnKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwTW9kdWxlLm5hbWU7XHJcbiIsInZhciBjc3MgPSBcIi50aW1lbGluZS1jb250YWluZXIge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XFxuICAudGltZWxpbmUtY29udGFpbmVyIG9sIHtcXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xcbiAgICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cXG4gICAgLnRpbWVsaW5lLWNvbnRhaW5lciBvbCBsaSB7XFxuICAgICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcXG4gICAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcXG4gICAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICAgIGhlaWdodDogMTBweDsgfVxcbiAgICAgIC50aW1lbGluZS1jb250YWluZXIgb2wgbGkgYSB7XFxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgICAgICBkaXNwbGF5OiBibG9jazsgfVxcbiAgICAgICAgLnRpbWVsaW5lLWNvbnRhaW5lciBvbCBsaSBhOjpiZWZvcmUge1xcbiAgICAgICAgICB0b3A6IDUwJTtcXG4gICAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XFxuICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICAgICAgICBjb250ZW50OiAnICc7XFxuICAgICAgICAgIHdpZHRoOiA3cHg7XFxuICAgICAgICAgIGhlaWdodDogN3B4O1xcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4O1xcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMzgzODM4O1xcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7IH1cXG4gICAgICAgIC50aW1lbGluZS1jb250YWluZXIgb2wgbGkgYS5zZWxlY3RlZDo6YmVmb3JlIHtcXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzdiOWQ2ZjtcXG4gICAgICAgICAgYm9yZGVyOiBub25lO1xcbiAgICAgICAgICB3aWR0aDogMTBweDtcXG4gICAgICAgICAgaGVpZ2h0OiAxMHB4OyB9XFxuICAgICAgICAudGltZWxpbmUtY29udGFpbmVyIG9sIGxpIGEgcCB7XFxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XFxuICAgICAgICAgIHBhZGRpbmc6IDA7XFxuICAgICAgICAgIHdpZHRoOiA1MHB4O1xcbiAgICAgICAgICBtYXJnaW46IDE0cHggYXV0byBhdXRvIDA7XFxuICAgICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00MCUpO1xcbiAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNDAlKTtcXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICAgICAgICB0ZXh0LXdyYXA6IG5vcm1hbDtcXG4gICAgICAgICAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcXG4gICAgICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xcbiAgICAgICAgICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XFxuICAgICAgICAgICAgICAtbXMtaHlwaGVuczogYXV0bztcXG4gICAgICAgICAgICAgICAgICBoeXBoZW5zOiBhdXRvOyB9XFxuICAudGltZWxpbmUtY29udGFpbmVyIC5saW5lLWNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogNTAlO1xcbiAgICB3aWR0aDogMTAwJTsgfVxcbiAgICAudGltZWxpbmUtY29udGFpbmVyIC5saW5lLWNvbnRhaW5lciAuZmlsbGluZy1saW5lIHtcXG4gICAgICBkaXNwbGF5OiBibG9jaztcXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgICAgei1pbmRleDogLTE7XFxuICAgICAgaGVpZ2h0OiAxcHg7XFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzdiOWQ2ZjtcXG4gICAgICB0b3A6IDUwJTtcXG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcXG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcXG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGVYKDApO1xcbiAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XFxuICAgICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGNlbnRlcjtcXG4gICAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xcbiAgICAgIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC4zcztcXG4gICAgICB0cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjNzO1xcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzO1xcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzLCAtd2Via2l0LXRyYW5zZm9ybSAwLjNzOyB9XFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluTnlZeTl1Wnkxb2IzSnBlbTl1ZEdGc0xYUnBiV1ZzYVc1bExuTmpjM01pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCVjBFN1JVRkRSU3h0UWtGQmEwSXNSVUYxUlc1Q08wVkJlRVZFTzBsQlNVa3NhVUpCUVdkQ08wbEJRMmhDTEhGQ1FVRmhPMGxCUVdJc2NVSkJRV0U3U1VGQllpeGpRVUZoTzBsQlEySXNWMEZCVlR0SlFVTldMREJDUVVFNFFqdFJRVUU1UWl4MVFrRkJPRUk3V1VGQk9VSXNLMEpCUVRoQ0xFVkJOa012UWp0SlFYQkVTRHROUVZWTkxEWkNRVUZ6UWp0TlFVRjBRaXc0UWtGQmMwSTdWVUZCZEVJc01rSkJRWE5DTzJOQlFYUkNMSFZDUVVGelFqdE5RVU4wUWl4aFFVRTJRaXhGUVhkRE9VSTdUVUZ1UkV3N1VVRmpVU3h6UWtGQmNVSTdVVUZEY2tJc1owSkJRV1U3VVVGRFppeGxRVUZqTEVWQmEwTm1PMUZCYkVSUU8xVkJTa1VzVTBGQlVUdFZRVU5TTEc5RFFVRXlRanRyUWtGQk0wSXNORUpCUVRKQ08xVkJkVUp1UWl4bFFVRmpPMVZCUTJRc2JVSkJRV3RDTzFWQlEyeENMR0ZCUVZrN1ZVRkRXaXhYUVM5Q1ZUdFZRV2REVml4WlFXaERWVHRWUVdsRFZpd3dRa0Z1UTJkQ08xVkJiME5vUWl3d1FrRnVRMnRDTzFWQmIwTnNRaXh0UWtGQmEwSXNSVUZEYmtJN1VVRTFRbFE3VlVFclFsVXNNRUpCTVVOVk8xVkJNa05XTEdGQlFWazdWVUZEV2l4WlFYaERaME03VlVGNVEyaERMR0ZCZWtOblF5eEZRVEJEYWtNN1VVRnVRMVE3VlVGelExVXNiVUpCUVd0Q08xVkJRMnhDTEdWQlFXTTdWVUZEWkN4WFFVRlZPMVZCUTFZc1dVRkJWenRWUVVOWUxIbENRVUYxUkR0VlFVTjJSQ3h2UTBGQk1rSTdhMEpCUVROQ0xEUkNRVUV5UWp0VlFVTXpRaXh0UWtGQmEwSTdWVUZEYkVJc2EwSkJRV2xDTzFWQlEycENMREJDUVVGNVFqdFZRVU42UWl4elFrRkJjVUk3VlVGRGNrSXNjMEpCUVdFN1kwRkJZaXhyUWtGQllUdHJRa0ZCWWl4alFVRmhMRVZCUTJRN1JVRnFSRlE3U1VGMVJFa3NaVUZCWXp0SlFVTmtMRzFDUVVGclFqdEpRVU5zUWl4VFFVRlJPMGxCUTFJc1dVRkJWeXhGUVdGYU8wbEJka1ZJTzAxQk5rUk5MR1ZCUVdNN1RVRkRaQ3h0UWtGQmEwSTdUVUZEYkVJc1dVRkJWenROUVVOWUxGbEJRVmM3VFVGRFdDd3dRa0UxUldNN1RVRlBiRUlzVTBGQlVUdE5RVU5TTEc5RFFVRXlRanRqUVVFelFpdzBRa0ZCTWtJN1RVRnpSWFpDTERaQ1FVRnZRanRqUVVGd1FpeHhRa0ZCYjBJN1RVRkRjRUlzYzBOQlFUWkNPMk5CUVRkQ0xEaENRVUUyUWp0TlFVTTNRaXd5UTBGQk1FSTdUVUZCTVVJc2JVTkJRVEJDTzAxQlFURkNMREpDUVVFd1FqdE5RVUV4UWl4dFJFRkJNRUlzUlVGRE0wSWlMQ0ptYVd4bElqb2libWN0YUc5eWFYcHZiblJoYkMxMGFXMWxiR2x1WlM1elkzTnpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpSkdKaGMyVXRZMjlzYjNJNklDTTNZamxrTm1ZN1hISmNiaVJpWVhObExXTnNaV0Z5TFdOdmJHOXlPaUFqWmpobU9HWTRPMXh5WEc0a1ltRnpaUzFwYm1GMGFYWmxMV052Ykc5eU9pQWpNemd6T0RNNE8xeHlYRzRrWlhabGJuUXRaRzkwTFhOcGVtVTZJRGR3ZUR0Y2NseHVKR1YyWlc1MExXUnZkQzF6YVhwbExXSnBaem9nSkdWMlpXNTBMV1J2ZEMxemFYcGxJQ3NnTTNCNE8xeHlYRzVjY2x4dVFHMXBlR2x1SUhSdmNDMWhibVF0ZEhKaGJuTnNZWFJsS0NrZ2UxeHlYRzRnSUhSdmNEb2dOVEFsTzF4eVhHNGdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV1NndE5UQWxLVHRjY2x4dWZWeHlYRzVjY2x4dUxuUnBiV1ZzYVc1bExXTnZiblJoYVc1bGNpQjdYSEpjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHlYRzVjY2x4dUlDQnZiQ0I3WEhKY2JpQWdJQ0JzYVhOMExYTjBlV3hsT2lCdWIyNWxPMXh5WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVJQ0FnSUhCaFpHUnBibWM2SURBN1hISmNiaUFnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYSEpjYmx4eVhHNGdJQ0FnYkdrZ2UxeHlYRzRnSUNBZ0lDQm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TzF4eVhHNGdJQ0FnSUNCb1pXbG5hSFE2SUNSbGRtVnVkQzFrYjNRdGMybDZaU0FySUROd2VEdGNjbHh1WEhKY2JpQWdJQ0FnSUdFZ2UxeHlYRzRnSUNBZ0lDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2NseHVJQ0FnSUNBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hISmNiaUFnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNZNk9tSmxabTl5WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0IwYjNBdFlXNWtMWFJ5WVc1emJHRjBaU2dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hISmNiaUFnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQW5JQ2M3WEhKY2JpQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ0pHVjJaVzUwTFdSdmRDMXphWHBsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQWtaWFpsYm5RdFpHOTBMWE5wZW1VN1hISmNiaUFnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrWW1GelpTMWpiR1ZoY2kxamIyeHZjanRjY2x4dUlDQWdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDUmlZWE5sTFdsdVlYUnBkbVV0WTI5c2IzSTdYSEpjYmlBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUExTUNVN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQW1Mbk5sYkdWamRHVmtPanBpWldadmNtVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pHSmhjMlV0WTI5c2IzSTdYSEpjYmlBZ0lDQWdJQ0FnSUNCaWIzSmtaWEk2SUc1dmJtVTdYSEpjYmlBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nSkdWMlpXNTBMV1J2ZEMxemFYcGxMV0pwWnp0Y2NseHVJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dKR1YyWlc1MExXUnZkQzF6YVhwbExXSnBaenRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUhBZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hISmNiaUFnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklEVXdjSGc3WEhKY2JpQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0NklDZ2taWFpsYm5RdFpHOTBMWE5wZW1VZ0t5QWtaWFpsYm5RdFpHOTBMWE5wZW1VcElHRjFkRzhnWVhWMGJ5QXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLQzAwTUNVcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4eVhHNGdJQ0FnSUNBZ0lDQWdkR1Y0ZEMxM2NtRndPaUJ1YjNKdFlXdzdYSEpjYmlBZ0lDQWdJQ0FnSUNCdmRtVnlabXh2ZHkxM2NtRndPaUJpY21WaGF5MTNiM0prTzF4eVhHNGdJQ0FnSUNBZ0lDQWdkMjl5WkMxM2NtRndPaUJpY21WaGF5MTNiM0prTzF4eVhHNGdJQ0FnSUNBZ0lDQWdhSGx3YUdWdWN6b2dZWFYwYnp0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQzVzYVc1bExXTnZiblJoYVc1bGNpQjdYSEpjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2NseHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVJQ0FnSUhSdmNEb2dOVEFsTzF4eVhHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hISmNibHh5WEc0Z0lDQWdMbVpwYkd4cGJtY3RiR2x1WlNCN1hISmNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4eVhHNGdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hISmNiaUFnSUNBZ0lIb3RhVzVrWlhnNklDMHhPMXh5WEc0Z0lDQWdJQ0JvWldsbmFIUTZJREZ3ZUR0Y2NseHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pHSmhjMlV0WTI5c2IzSTdYSEpjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJSFJ2Y0MxaGJtUXRkSEpoYm5Oc1lYUmxLQ2s3WEhKY2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2MyTmhiR1ZZS0RBcE8xeHlYRzRnSUNBZ0lDQjBjbUZ1YzJadmNtMHRiM0pwWjJsdU9pQnNaV1owSUdObGJuUmxjanRjY2x4dUlDQWdJQ0FnZEhKaGJuTnBkR2x2YmpvZ2RISmhibk5tYjNKdElEQXVNM003WEhKY2JpQWdJQ0I5WEhKY2JpQWdmVnh5WEc1OVhISmNiaUpkZlE9PSAqL1xcbi8qIyBzb3VyY2VVUkw9c3JjXFxcXG5nLWhvcml6b250YWwtdGltZWxpbmUuc2NzcyAqL1xcblwiXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJ3Njc3NpZnknKS5jcmVhdGVTdHlsZShjc3MsIHtcImhyZWZcIjpcInNyY1xcXFxuZy1ob3Jpem9udGFsLXRpbWVsaW5lLnNjc3NcIn0pIiwiLy9AdHMtY2hlY2tcclxuXHJcbmltcG9ydCAkIGZyb20gXCJqcXVlcnlcIlxyXG5cclxuZXhwb3J0IGNsYXNzIFRpbWVsaW5lIHtcclxuICAgIHRpbWVsaW5lQ29udGFpbmVyRWxlbWVudDtcclxuICAgIHRpbWVsaW5lRXZlbnRzQ29udGFpbmVyO1xyXG5cclxuICAgIHN0YXRpYyB0b0ludCh2YWx1ZSkge1xyXG4gICAgICAgIHJldHVybiBwYXJzZUludCh2YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3RydWN0b3IodGltZWxpbmVDb250YWluZXJFbGVtZW50KSB7XHJcbiAgICAgICAgaWYgKCF0aW1lbGluZUNvbnRhaW5lckVsZW1lbnQpIHtcclxuICAgICAgICAgICAgdGhyb3cgVHlwZUVycm9yKFwidGltZWxpbmVDb250YWluZXJFbGVtZW50IHNob3VsZCBub3QgYmUgbnVsbFwiKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMudGltZWxpbmVDb250YWluZXJFbGVtZW50ID0gJCh0aW1lbGluZUNvbnRhaW5lckVsZW1lbnQpO1xyXG4gICAgICAgIGlmICghdGhpcy50aW1lbGluZUNvbnRhaW5lckVsZW1lbnQuZ2V0KDApKSB7XHJcbiAgICAgICAgICAgIHRocm93IFR5cGVFcnJvcihcInRpbWVsaW5lQ29udGFpbmVyRWxlbWVudCBzaG91bGQgbm90IGJlIGVtcHR5XCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy9jYWNoZSB0aW1lbGluZSBjb21wb25lbnRzIFxyXG4gICAgICAgIHRoaXMudGltZWxpbmVFdmVudHNDb250YWluZXIgPSB0aGlzLnRpbWVsaW5lQ29udGFpbmVyRWxlbWVudC5jaGlsZHJlbignLnRpbWVsaW5lLWV2ZW50cycpO1xyXG4gICAgICAgIHRoaXMubGluZUNvbnRhaW5lciA9IHRoaXMudGltZWxpbmVDb250YWluZXJFbGVtZW50LmNoaWxkcmVuKCcubGluZS1jb250YWluZXInKTtcclxuICAgICAgICB0aGlzLmZpbGxpbmdMaW5lID0gdGhpcy5saW5lQ29udGFpbmVyLmNoaWxkcmVuKCcuZmlsbGluZy1saW5lJyk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RXZlbnRMaW5rcygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy50aW1lbGluZUV2ZW50c0NvbnRhaW5lci5maW5kKCcudGltZWxpbmUtZXZlbnQtbGluaycpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRXZlbnRDbGljayhjYWxsYmFjaykge1xyXG4gICAgICAgIHRoaXMuZ2V0RXZlbnRMaW5rcygpLm9uKCdjbGljaycsIGNhbGxiYWNrKTtcclxuICAgIH1cclxuXHJcbiAgICBvZmZFdmVudENsaWNrKGNhbGxiYWNrKSB7XHJcbiAgICAgICAgdGhpcy5nZXRFdmVudExpbmtzKCkub2ZmKCdjbGljaycsIGNhbGxiYWNrKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRTZWxlY3RlZChpbmRleCkge1xyXG4gICAgICAgIGNvbnN0IHRpbWVsaW5lRXZlbnRMaW5rcyA9IHRoaXMuZ2V0RXZlbnRMaW5rcygpO1xyXG4gICAgICAgIGNvbnN0IGVsZW1TZWxlY3QgPSAkKHRpbWVsaW5lRXZlbnRMaW5rcy5nZXQoaW5kZXgpKTtcclxuICAgICAgICBjb25zdCBldmVudHNMZW5naHQgPSB0aW1lbGluZUV2ZW50TGlua3MubGVuZ3RoIC0gMTtcclxuICAgICAgICBjb25zdCBzY2FsZVBlcmNlbnRhZ2UgPSBpbmRleCAvIGV2ZW50c0xlbmdodDtcclxuXHJcbiAgICAgICAgdGltZWxpbmVFdmVudExpbmtzLnJlbW92ZUNsYXNzKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgICAgZWxlbVNlbGVjdC5hZGRDbGFzcyhcInNlbGVjdGVkXCIpO1xyXG5cclxuICAgICAgICB0aGlzLmZpbGxpbmdMaW5lLmNzcygndHJhbnNmb3JtJywgYHNjYWxlWCgke3NjYWxlUGVyY2VudGFnZX0pYCk7XHJcbiAgICB9XHJcbn1cclxuIl19"}